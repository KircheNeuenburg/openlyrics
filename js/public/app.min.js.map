{"version":3,"sources":["app.js","controllers/appcontroller.js","controllers/notecontroller.js","controllers/notescontroller.js","filters/and.js","filters/noteTitle.js","filters/wordCount.js","directives/autofocus.js","directives/editor.js","directives/issaving.js","directives/tooltip.js","services/debounce.js","services/is.js","services/notesmodel.js","services/savequeue.js","services/urlFinder.js"],"names":["angular","$","requestToken","SimpleMDE","undefined","app","module","config","$provide","$routeProvider","RestangularProvider","$httpProvider","$windowProvider","defaults","headers","common","requesttoken","value","saveInterval","when","templateUrl","controller","resolve","note","$route","$q","is","Restangular","deferred","defer","noteId","current","params","loading","one","get","then","reject","promise","otherwise","redirectTo","baseUrl","OC","generateUrl","setBaseUrl","run","$rootScope","$location","NotesModel","attr","filePath","$on","notes","getAll","length","sorted","sort","a","b","modified","path","id","$scope","init","lastViewedNote","search","$routeParams","SaveQueue","debounce","updateIfExists","isSaving","updateTitle","title","content","split","t","save","add","toggleDistractionFree","launchIntoFullscreen","element","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","document","mozCancelFullScreen","webkitExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","route","notesResource","all","getList","addAll","create","post","remove","$emit","toggleFavorite","customPUT","favorite","filter","$filter","items","searchString","searchValues","filtered","i","trim","replace","wordCount","window","n","directive","restrict","link","scope","focus","$timeout","urlFinder","simplemde","spellChecker","autoDownloadFontAwesome","toolbar","status","forceSync","editorElement","codemirror","getWrapperElement","on","$apply","event","ctrlKey","url","this","isDefined","open","$window","notesIsSaving","onbeforeunload","tooltip","container","factory","func","delay","timeout","context","args","arguments","cancel","apply","notesIds","prototype","updated","push","splice","_queue","_flushLock","_flush","keys","Object","self","requests","put","_noteUpdateRequest","bind","response","prev","next","text","jQuery","oc_requesttoken"],"mappings":"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","file":"app.min.js","sourcesContent":["/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n/* jshint unused: false */\nvar app = angular.module('Notes', ['restangular', 'ngRoute']).\nconfig(function($provide, $routeProvider, RestangularProvider, $httpProvider,\n                $windowProvider) {\n    'use strict';\n\n    // Always send the CSRF token by default\n    $httpProvider.defaults.headers.common.requesttoken = requestToken;\n\n    // you have to use $provide inside the config method to provide a globally\n    // shared and injectable object\n    $provide.value('Constants', {\n        saveInterval: 5*1000  // miliseconds\n    });\n\n    // define your routes that that load templates into the ng-view\n    $routeProvider.when('/openlp/:noteId', {\n        templateUrl: 'note.html',\n        controller: 'NoteController',\n        resolve: {\n            // $routeParams does not work inside resolve so use $route\n            // note is the name of the argument that will be injected into the\n            // controller\n            /* @ngInject */\n            note: function ($route, $q, is, Restangular) {\n\n                var deferred = $q.defer();\n                var noteId = $route.current.params.noteId;\n                is.loading = true;\n\n                Restangular.one('openlp', noteId).get().then(function (note) {\n                    is.loading = false;\n                    deferred.resolve(note);\n                }, function () {\n                    is.loading = false;\n                    deferred.reject();\n                });\n\n                return deferred.promise;\n            }\n        }\n    }).otherwise({\n        redirectTo: '/'\n    });\n\n    var baseUrl = OC.generateUrl('/apps/openlp');\n    RestangularProvider.setBaseUrl(baseUrl);\n\n\n\n}).run(function ($rootScope, $location, NotesModel) {\n    'use strict';\n\n    $('link[rel=\"shortcut icon\"]').attr(\n\t\t    'href',\n\t\t    OC.filePath('openlp', 'img', 'favicon.png')\n    );\n\n    // handle route errors\n    $rootScope.$on('$routeChangeError', function () {\n        var notes = NotesModel.getAll();\n\n        // route change error should redirect to the latest note if possible\n        if (notes.length > 0) {\n            var sorted = notes.sort(function (a, b) {\n                if(a.modified > b.modified) {\n                    return 1;\n                } else if(a.modified < b.modified) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n\n            var note = notes[sorted.length-1];\n            $location.path('/openlp/' + note.id);\n        } else {\n            $location.path('/');\n        }\n    });\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.controller('AppController', function ($scope, $location, is) {\n    'use strict';\n\n    $scope.is = is;\n\n    $scope.init = function (lastViewedNote) {\n        if(lastViewedNote !== 0) {\n            $location.path('/openlp/' + lastViewedNote);\n        }\n    };\n\n    $scope.search = '';\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.controller('NoteController', function($routeParams, $scope, NotesModel,\n                                          SaveQueue, note, debounce) {\n    'use strict';\n\n    NotesModel.updateIfExists(note);\n\n    $scope.note = NotesModel.get($routeParams.noteId);\n\n    $scope.isSaving = function () {\n        return SaveQueue.isSaving();\n    };\n\n    $scope.updateTitle = function () {\n        $scope.note.title = $scope.note.content.split('\\n')[0] ||\n            t('notes', 'New note');\n    };\n\n    $scope.save = debounce(function() {\n        var note = $scope.note;\n        SaveQueue.add(note);\n    }, 300);\n\n    $scope.toggleDistractionFree = function() {\n        function launchIntoFullscreen(element) {\n            if(element.requestFullscreen) {\n                element.requestFullscreen();\n            } else if(element.mozRequestFullScreen) {\n                element.mozRequestFullScreen();\n            } else if(element.webkitRequestFullscreen) {\n                element.webkitRequestFullscreen();\n            } else if(element.msRequestFullscreen) {\n                element.msRequestFullscreen();\n            }\n        }\n\n        function exitFullscreen() {\n            if(document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if(document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if(document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            }\n        }\n\n        if(document.fullscreenElement ||\n           document.mozFullScreenElement ||\n           document.webkitFullscreenElement) {\n            exitFullscreen();\n        } else {\n            launchIntoFullscreen(document.getElementById('app-content'));\n        }\n    };\n\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// This is available by using ng-controller=\"SongsController\" in your HTML\napp.controller('SongsController', function($routeParams, $scope, $location,\n                                           Restangular, NotesModel) {\n    'use strict';\n\n    $scope.route = $routeParams;\n    $scope.notes = NotesModel.getAll();\n\n    var notesResource = Restangular.all('notes');\n\n    // initial request for getting all notes\n    notesResource.getList().then(function (notes) {\n        NotesModel.addAll(notes);\n    });\n\n    $scope.create = function () {\n        notesResource.post().then(function (note) {\n            NotesModel.add(note);\n            $location.path('/openlp/' + note.id);\n        });\n    };\n\n    $scope.delete = function (noteId) {\n        var note = NotesModel.get(noteId);\n        note.remove().then(function () {\n            NotesModel.remove(noteId);\n            $scope.$emit('$routeChangeError');\n        });\n    };\n\n    $scope.toggleFavorite = function (noteId) {\n        var note = NotesModel.get(noteId);\n        note.customPUT({favorite: !note.favorite},\n            'favorite', {}, {}).then(function (favorite) {\n            note.favorite = favorite ? true : false;\n        });\n    };\n\n});\n","/**\n * filter by multiple words (AND operation)\n */\napp.filter('and', ['$filter', function ($filter) {\n\t'use strict';\n\treturn function (items, searchString) {\n\t\tvar searchValues = searchString.split(' ');\n\t\tvar filtered = items;\n\t\tfor(var i in searchValues) {\n\t\t\tfiltered = $filter('filter')(filtered, searchValues[i]);\n\t\t}\n\t\treturn filtered;\n\t};\n}]);\n","/**\n * removes whitespaces and leading #\n */\napp.filter('noteTitle', function () {\n\t'use strict';\n\treturn function (value) {\n        \tvalue = value.split('\\n')[0] || 'newNote';\n\t\treturn value.trim().replace(/^#+/g, '');\n\t};\n});\n","app.filter('wordCount', function () {\n\t'use strict';\n\treturn function (value) {\n\t\tif (value && (typeof value === 'string')) {\n\t\t\tvar wordCount = value.split(/\\s+/).filter(\n\t\t\t\t// only count words containing\n\t\t\t\t// at least one alphanumeric character\n\t\t\t\tfunction(value) {\n\t\t\t\t\treturn value.search(/[A-Za-z0-9]/) !== -1;\n\t\t\t\t}\n\t\t\t).length;\n\t\t\treturn window.n('notes', '%n word', '%n words', wordCount);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t};\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('notesAutofocus', function () {\n    'use strict';\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.focus();\n        }\n    };\n});\n","/*global SimpleMDE*/\napp.directive('editor', ['$timeout',\n                         'urlFinder',\n                         function ($timeout, urlFinder) {\n\t'use strict';\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element) {\n\n\t\t\tvar simplemde = new SimpleMDE({\n\t\t\t\telement: element[0],\n\t\t\t\tspellChecker: false,\n\t\t\t\tautoDownloadFontAwesome: false,\n\t\t\t\ttoolbar: false,\n\t\t\t\tstatus: false,\n\t\t\t\tforceSync: true\n\t\t\t});\n\t\t\tvar editorElement = $(simplemde.codemirror.getWrapperElement());\n\n\t\t\tsimplemde.value(scope.note.content);\n\n\t\t\tsimplemde.codemirror.on('change', function() {\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tscope.note.content = simplemde.value();\n\t\t\t\t\t\tscope.save();\n\t\t\t\t\t\tscope.updateTitle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\teditorElement.on('click', '.cm-link, .cm-url', function(event) {\n\t\t\t\tif(event.ctrlKey) {\n\t\t\t\t\tvar url = urlFinder(this);\n\t\t\t\t\tif(angular.isDefined(url)) {\n\t\t\t\t\t\twindow.open(url, '_blank');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('notesIsSaving', function ($window) {\n    'use strict';\n    return {\n        restrict: 'A',\n        scope: {\n            'notesIsSaving': '='\n        },\n        link: function (scope) {\n            $window.onbeforeunload = function () {\n                if (scope.notesIsSaving) {\n                    return t('notes', 'Note is currently saving. Leaving ' +\n                                      'the page will delete all changes!');\n                } else {\n                    return null;\n                }\n            };\n        }\n    };\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('notesTooltip', function () {\n    'use strict';\n\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.tooltip({'container': 'body'});\n\n            element.on('$destroy', function() {\n                element.tooltip('hide');\n            });\n        }\n    };\n});\n","/**\n * Copyright (c) 2016, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('debounce', ['$timeout', function($timeout) {\n\t'use strict';\n\n\treturn function debounce(func, delay) {\n\t\tvar timeout;\n\n\t\treturn function() {\n\t\t\tvar context = this, args = arguments;\n\n\t\t\tif(timeout) {\n\t\t\t\t$timeout.cancel(timeout);\n\t\t\t}\n\t\t\ttimeout = $timeout(function() {\n\t\t\t\tfunc.apply(context, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n}]);\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('is', function () {\n    'use strict';\n\n    return {\n        loading: false\n    };\n});","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// take care of fileconflicts by appending a number\napp.factory('NotesModel', function () {\n    'use strict';\n\n    var NotesModel = function () {\n        this.notes = [];\n        this.notesIds = {};\n    };\n\n    NotesModel.prototype = {\n        addAll: function (notes) {\n            for(var i=0; i<notes.length; i+=1) {\n                this.add(notes[i]);\n            }\n        },\n        add: function(note) {\n            this.updateIfExists(note);\n        },\n        getAll: function () {\n            return this.notes;\n        },\n        get: function (id) {\n            return this.notesIds[id];\n        },\n        updateIfExists: function(updated) {\n            var note = this.notesIds[updated.id];\n            if(angular.isDefined(note)) {\n                note.title = updated.title;\n                note.modified = updated.modified;\n                note.content = updated.content;\n                note.favorite = updated.favorite;\n            } else {\n                this.notes.push(updated);\n                this.notesIds[updated.id] = updated;\n            }\n        },\n        remove: function (id) {\n            for(var i=0; i<this.notes.length; i+=1) {\n                var note = this.notes[i];\n                if(note.id === id) {\n                    this.notes.splice(i, 1);\n                    delete this.notesIds[id];\n                    break;\n                }\n            }\n        }\n    };\n\n    return new NotesModel();\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('SaveQueue', function($q) {\n    'use strict';\n\n    var SaveQueue = function () {\n        this._queue = {};\n        this._flushLock = false;\n    };\n\n    SaveQueue.prototype = {\n        add: function (note) {\n            this._queue[note.id] = note;\n            this._flush();\n        },\n        _flush: function () {\n            // if there are no changes dont execute the requests\n            var keys = Object.keys(this._queue);\n            if(keys.length === 0 || this._flushLock) {\n                return;\n            } else {\n                this._flushLock = true;\n            }\n\n            var self = this;\n            var requests = [];\n\n            // iterate over updated objects and run an update request for\n            // each one of them\n            for(var i=0; i<keys.length; i+=1) {\n                var note = this._queue[keys[i]];\n                // if the update finished, update the modified and title\n                // attributes on the note\n                requests.push(note.put().then(\n                    this._noteUpdateRequest.bind(null, note))\n                );\n            }\n            this._queue = {};\n\n            // if all update requests are completed, run the flush\n            // again to update the next batch of queued notes\n            $q.all(requests).then(function () {\n                self._flushLock = false;\n                self._flush();\n            });\n        },\n        _noteUpdateRequest: function (note, response) {\n            note.title = response.title;\n            note.modified = response.modified;\n        },\n        isSaving: function () {\n            return this._flushLock;\n        }\n    };\n\n    return new SaveQueue();\n});","/**\n * Copyright (c) 2016, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// finds the url which should be opened when a link is clicked\n// example: '[hello](http://example.com)'\napp.factory('urlFinder', [function() {\n\t'use strict';\n\n\treturn function urlFinder(element) {\n\t\telement = $(element);\n\n\t\t// special case: click on ')'\n\t\tif(element.is('.cm-url.cm-formatting')) {\n\t\t\tif(element.prev().length !== 0) {\n\t\t\t\telement = element.prev();\n\t\t\t}\n\t\t}\n\n\t\t// skip '[hello]'\n\t\twhile(element.is('.cm-link')) {\n\t\t\telement = element.next();\n\t\t}\n\n\t\t// skip '('\n\t\twhile(element.is('.cm-url.cm-formatting')) {\n\t\t\telement = element.next();\n\t\t}\n\n\t\t// check if we actually have a cm-url\n\t\tif(element.is('.cm-url:not(.cm-formatting)')) {\n\t\t\treturn element.text();\n\t\t}\n\n\t\treturn undefined;\n\t};\n}]);\n"]}