{"version":3,"sources":["app.js","directives/autofocus.js","directives/editor.js","directives/issaving.js","directives/tooltip.js","controllers/appcontroller.js","controllers/songcontroller.js","controllers/songscontroller.js","filters/and.js","filters/songTitle.js","services/debounce.js","services/is.js","services/savequeue.js","services/songsmodel.js","services/urlFinder.js"],"names":["angular","$","requestToken","SimpleMDE","undefined","app","module","config","$provide","$routeProvider","RestangularProvider","$httpProvider","$windowProvider","defaults","headers","common","requesttoken","value","saveInterval","when","templateUrl","controller","resolve","song","$route","$q","is","Restangular","deferred","defer","songId","current","params","loading","one","get","then","reject","promise","otherwise","redirectTo","baseUrl","OC","generateUrl","setBaseUrl","run","$rootScope","$location","SongsModel","attr","filePath","$on","songs","getAll","length","sorted","sort","a","b","modified","path","id","directive","restrict","link","scope","element","focus","$timeout","urlFinder","simplemde","spellChecker","autoDownloadFontAwesome","toolbar","status","forceSync","editorElement","codemirror","getWrapperElement","content","on","$apply","save","updateTitle","event","ctrlKey","url","this","isDefined","window","open","$window","songsIsSaving","onbeforeunload","t","tooltip","container","$scope","init","lastViewedSong","search","$routeParams","SaveQueue","debounce","updateIfExists","isSaving","add","toggleDistractionFree","launchIntoFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","document","mozCancelFullScreen","webkitExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","route","songsResource","all","getList","addAll","create","post","remove","$emit","toggleFavorite","customPUT","favorite","filter","$filter","items","searchString","searchValues","split","filtered","i","trim","replace","factory","func","delay","timeout","context","args","arguments","cancel","apply","_queue","_flushLock","prototype","_flush","keys","Object","self","requests","push","put","_songUpdateRequest","bind","response","title","songsIds","updated","splice","prev","next","text","jQuery","oc_requesttoken"],"mappings":"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","file":"app.min.js","sourcesContent":["/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n/* jshint unused: false */\nvar app = angular.module('OpenLP', ['restangular', 'ngRoute']).\nconfig(function($provide, $routeProvider, RestangularProvider, $httpProvider,\n                $windowProvider) {\n    'use strict';\n\n    // Always send the CSRF token by default\n    $httpProvider.defaults.headers.common.requesttoken = requestToken;\n\n    // you have to use $provide inside the config method to provide a globally\n    // shared and injectable object\n    $provide.value('Constants', {\n        saveInterval: 5*1000  // miliseconds\n    });\n\n    // define your routes that that load templates into the ng-view\n    $routeProvider.when('/songs/:songId', {\n        templateUrl: 'song.html',\n        controller: 'SongController',\n        resolve: {\n            // $routeParams does not work inside resolve so use $route\n            // song is the name of the argument that will be injected into the\n            // controller\n            /* @ngInject */\n            song: function ($route, $q, is, Restangular) {\n\n                var deferred = $q.defer();\n                var songId = $route.current.params.songId;\n                is.loading = true;\n\n                Restangular.one('songs', songId).get().then(function (song) {\n                    is.loading = false;\n                    deferred.resolve(song);\n                }, function () {\n                    is.loading = false;\n                    deferred.reject();\n                });\n\n                return deferred.promise;\n            }\n        }\n    }).otherwise({\n        redirectTo: '/'\n    });\n\n    var baseUrl = OC.generateUrl('/apps/openlp');\n    RestangularProvider.setBaseUrl(baseUrl);\n\n\n\n}).run(function ($rootScope, $location, SongsModel) {\n    'use strict';\n\n    $('link[rel=\"shortcut icon\"]').attr(\n\t\t    'href',\n\t\t    OC.filePath('songs', 'img', 'favicon.png')\n    );\n\n    // handle route errors\n    $rootScope.$on('$routeChangeError', function () {\n        var songs = SongsModel.getAll();\n\n        // route change error should redirect to the latest song if possible\n        if (songs.length > 0) {\n            var sorted = songs.sort(function (a, b) {\n                if(a.modified > b.modified) {\n                    return 1;\n                } else if(a.modified < b.modified) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n\n            var song = songs[sorted.length-1];\n            $location.path('/songs/' + song.id);\n        } else {\n            $location.path('/');\n        }\n    });\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('songsAutofocus', function () {\n    'use strict';\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.focus();\n        }\n    };\n});\n","/*global SimpleMDE*/\napp.directive('editor', ['$timeout',\n                         'urlFinder',\n                         function ($timeout, urlFinder) {\n\t'use strict';\n\treturn {\n\t\trestrict: 'A',\n\t\tlink: function(scope, element) {\n\n\t\t\tvar simplemde = new SimpleMDE({\n\t\t\t\telement: element[0],\n\t\t\t\tspellChecker: false,\n\t\t\t\tautoDownloadFontAwesome: false,\n\t\t\t\ttoolbar: false,\n\t\t\t\tstatus: false,\n\t\t\t\tforceSync: true\n\t\t\t});\n\t\t\tvar editorElement = $(simplemde.codemirror.getWrapperElement());\n\n\t\t\tsimplemde.value(scope.song.content);\n\n\t\t\tsimplemde.codemirror.on('change', function() {\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tscope.$apply(function () {\n\t\t\t\t\t\tscope.song.content = simplemde.value();\n\t\t\t\t\t\tscope.save();\n\t\t\t\t\t\tscope.updateTitle();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\teditorElement.on('click', '.cm-link, .cm-url', function(event) {\n\t\t\t\tif(event.ctrlKey) {\n\t\t\t\t\tvar url = urlFinder(this);\n\t\t\t\t\tif(angular.isDefined(url)) {\n\t\t\t\t\t\twindow.open(url, '_blank');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('songsIsSaving', function ($window) {\n    'use strict';\n    return {\n        restrict: 'A',\n        scope: {\n            'songsIsSaving': '='\n        },\n        link: function (scope) {\n            $window.onbeforeunload = function () {\n                if (scope.songsIsSaving) {\n                    return t('songs', 'Song is currently saving. Leaving ' +\n                                      'the page will delete all changes!');\n                } else {\n                    return null;\n                }\n            };\n        }\n    };\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.directive('songsTooltip', function () {\n    'use strict';\n\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.tooltip({'container': 'body'});\n\n            element.on('$destroy', function() {\n                element.tooltip('hide');\n            });\n        }\n    };\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.controller('AppController', function ($scope, $location, is) {\n    'use strict';\n\n    $scope.is = is;\n\n    $scope.init = function (lastViewedSong) {\n        if(lastViewedSong !== 0) {\n            $location.path('/songs/' + lastViewedSong);\n        }\n    };\n\n    $scope.search = '';\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.controller('SongController', function($routeParams, $scope, SongsModel,\n                                          SaveQueue, song, debounce) {\n    'use strict';\n\n    SongsModel.updateIfExists(song);\n\n    $scope.song = SongsModel.get($routeParams.songId);\n\n    $scope.isSaving = function () {\n        return SaveQueue.isSaving();\n    };\n\n    $scope.updateTitle = function () {\n        //$scope.song.title = $scope.song.content.split('\\n')[0] ||\n        //    t('songs', 'New song');\n    };\n\n    $scope.save = debounce(function() {\n        var song = $scope.song;\n        SaveQueue.add(song);\n    }, 300);\n\n    $scope.toggleDistractionFree = function() {\n        function launchIntoFullscreen(element) {\n            if(element.requestFullscreen) {\n                element.requestFullscreen();\n            } else if(element.mozRequestFullScreen) {\n                element.mozRequestFullScreen();\n            } else if(element.webkitRequestFullscreen) {\n                element.webkitRequestFullscreen();\n            } else if(element.msRequestFullscreen) {\n                element.msRequestFullscreen();\n            }\n        }\n\n        function exitFullscreen() {\n            if(document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if(document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if(document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            }\n        }\n\n        if(document.fullscreenElement ||\n           document.mozFullScreenElement ||\n           document.webkitFullscreenElement) {\n            exitFullscreen();\n        } else {\n            launchIntoFullscreen(document.getElementById('app-content'));\n        }\n    };\n\n});\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// This is available by using ng-controller=\"SongsController\" in your HTML\napp.controller('SongsController', function($routeParams, $scope, $location,\n                                           Restangular, SongsModel) {\n    'use strict';\n\n    $scope.route = $routeParams;\n    $scope.songs = SongsModel.getAll();\n\n    var songsResource = Restangular.all('songs');\n\n    // initial request for getting all songs\n    songsResource.getList().then(function (songs) {\n        SongsModel.addAll(songs);\n    });\n\n    $scope.create = function () {\n        songsResource.post().then(function (song) {\n            SongsModel.add(song);\n            $location.path('/songs/' + song.id);\n        });\n    };\n\n    $scope.delete = function (songId) {\n        var song = SongsModel.get(songId);\n        song.remove().then(function () {\n            SongsModel.remove(songId);\n            $scope.$emit('$routeChangeError');\n        });\n    };\n\n    $scope.toggleFavorite = function (songId) {\n        var song = SongsModel.get(songId);\n        song.customPUT({favorite: !song.favorite},\n            'favorite', {}, {}).then(function (favorite) {\n            song.favorite = favorite ? true : false;\n        });\n    };\n\n});\n","/**\n * filter by multiple words (AND operation)\n */\napp.filter('and', ['$filter', function ($filter) {\n\t'use strict';\n\treturn function (items, searchString) {\n\t\tvar searchValues = searchString.split(' ');\n\t\tvar filtered = items;\n\t\tfor(var i in searchValues) {\n\t\t\tfiltered = $filter('filter')(filtered, searchValues[i]);\n\t\t}\n\t\treturn filtered;\n\t};\n}]);\n","/**\n * removes whitespaces and leading #\n */\napp.filter('songTitle', function () {\n\t'use strict';\n\treturn function (value) {\n        \tvalue = value.split('\\n')[0] || 'newSong';\n\t\treturn value.trim().replace(/^#+/g, '');\n\t};\n});\n","/**\n * Copyright (c) 2016, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('debounce', ['$timeout', function($timeout) {\n\t'use strict';\n\n\treturn function debounce(func, delay) {\n\t\tvar timeout;\n\n\t\treturn function() {\n\t\t\tvar context = this, args = arguments;\n\n\t\t\tif(timeout) {\n\t\t\t\t$timeout.cancel(timeout);\n\t\t\t}\n\t\t\ttimeout = $timeout(function() {\n\t\t\t\tfunc.apply(context, args);\n\t\t\t}, delay);\n\t\t};\n\t};\n}]);\n","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('is', function () {\n    'use strict';\n\n    return {\n        loading: false\n    };\n});","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\napp.factory('SaveQueue', function($q) {\n    'use strict';\n\n    var SaveQueue = function () {\n        this._queue = {};\n        this._flushLock = false;\n    };\n\n    SaveQueue.prototype = {\n        add: function (song) {\n            this._queue[song.id] = song;\n            this._flush();\n        },\n        _flush: function () {\n            // if there are no changes dont execute the requests\n            var keys = Object.keys(this._queue);\n            if(keys.length === 0 || this._flushLock) {\n                return;\n            } else {\n                this._flushLock = true;\n            }\n\n            var self = this;\n            var requests = [];\n\n            // iterate over updated objects and run an update request for\n            // each one of them\n            for(var i=0; i<keys.length; i+=1) {\n                var song = this._queue[keys[i]];\n                // if the update finished, update the modified and title\n                // attributes on the song\n                requests.push(song.put().then(\n                    this._songUpdateRequest.bind(null, song))\n                );\n            }\n            this._queue = {};\n\n            // if all update requests are completed, run the flush\n            // again to update the next batch of queued songs\n            $q.all(requests).then(function () {\n                self._flushLock = false;\n                self._flush();\n            });\n        },\n        _songUpdateRequest: function (song, response) {\n            song.title = response.title;\n            song.modified = response.modified;\n        },\n        isSaving: function () {\n            return this._flushLock;\n        }\n    };\n\n    return new SaveQueue();\n});","/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// take care of fileconflicts by appending a number\napp.factory('SongsModel', function () {\n    'use strict';\n\n    var SongsModel = function () {\n        this.songs = [];\n        this.songsIds = {};\n    };\n\n    SongsModel.prototype = {\n        addAll: function (songs) {\n            for(var i=0; i<songs.length; i+=1) {\n                this.add(songs[i]);\n            }\n        },\n        add: function(song) {\n            this.updateIfExists(song);\n        },\n        getAll: function () {\n            return this.songs;\n        },\n        get: function (id) {\n            return this.songsIds[id];\n        },\n        updateIfExists: function(updated) {\n            var song = this.songsIds[updated.id];\n            if(angular.isDefined(song)) {\n                song.title = updated.title;\n                song.modified = updated.modified;\n                song.content = updated.content;\n                song.favorite = updated.favorite;\n            } else {\n                this.songs.push(updated);\n                this.songsIds[updated.id] = updated;\n            }\n        },\n        remove: function (id) {\n            for(var i=0; i<this.songs.length; i+=1) {\n                var song = this.songs[i];\n                if(song.id === id) {\n                    this.songs.splice(i, 1);\n                    delete this.songsIds[id];\n                    break;\n                }\n            }\n        }\n    };\n\n    return new SongsModel();\n});\n","/**\n * Copyright (c) 2016, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n\n// finds the url which should be opened when a link is clicked\n// example: '[hello](http://example.com)'\napp.factory('urlFinder', [function() {\n\t'use strict';\n\n\treturn function urlFinder(element) {\n\t\telement = $(element);\n\n\t\t// special case: click on ')'\n\t\tif(element.is('.cm-url.cm-formatting')) {\n\t\t\tif(element.prev().length !== 0) {\n\t\t\t\telement = element.prev();\n\t\t\t}\n\t\t}\n\n\t\t// skip '[hello]'\n\t\twhile(element.is('.cm-link')) {\n\t\t\telement = element.next();\n\t\t}\n\n\t\t// skip '('\n\t\twhile(element.is('.cm-url.cm-formatting')) {\n\t\t\telement = element.next();\n\t\t}\n\n\t\t// check if we actually have a cm-url\n\t\tif(element.is('.cm-url:not(.cm-formatting)')) {\n\t\t\treturn element.text();\n\t\t}\n\n\t\treturn undefined;\n\t};\n}]);\n"]}